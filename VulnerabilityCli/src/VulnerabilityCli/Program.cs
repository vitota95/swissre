using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
using VulnerabilityCli.Application;

class Program
{
    static async Task Main(string[] args)
    {
        if (!ValidateArguments(args, out string filePath, out string apiUrl))
        {
            return;
        }

        var host = Host.CreateDefaultBuilder(args)
            .ConfigureServices((context, services) =>
            {
                services.AddHttpClient();
                services.AddTransient<VulnerabilityIngressClient>();
            })
            .Build();

        var client = host.Services.GetRequiredService<VulnerabilityIngressClient>();

        try
        {
            var vulnerabilityData = JsonProcessor.DeserializeAndValidate(filePath);

            if (vulnerabilityData != null && vulnerabilityData.Vulnerabilities.Count > 0) 
            {
                await client.PostVulnerabilityDataAsync(vulnerabilityData, apiUrl);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred: {ex.Message}");
        }
    }

    private static bool ValidateArguments(string[] args, out string filePath, out string apiUrl)
    {
        filePath = string.Empty;
        apiUrl = string.Empty;

        if (args.Length == 0 || args[0] == "--help" || args[0] == "-h")
        {
            DisplayHelp();
            return false;
        }

        if (args.Length != 4 || args[0] != "--file" || args[2] != "--url")
        {
            Console.WriteLine("Invalid arguments. Use --help or -h for usage instructions.");
            return false;
        }

        filePath = args[1];
        apiUrl = args[3];

        if (!File.Exists(filePath))
        {
            Console.WriteLine($"Error: The file '{filePath}' does not exist.");
            return false;
        }

        return true;
    }

    private static void DisplayHelp()
    {
        Console.WriteLine("CLI Usage:");
        Console.WriteLine("$ vulnerability-cli [OPTIONS] [ARGS]...");
        Console.WriteLine("$ vulnerability-cli --file {JSON_FILE} --url {API_URL}");
        Console.WriteLine();
        Console.WriteLine("Options:");
        Console.WriteLine("  --file   Path to the JSON file containing vulnerability data.");
        Console.WriteLine("  --url    API URL to post the vulnerability data.");
        Console.WriteLine("  --help, -h  Display this help message.");
    }
}