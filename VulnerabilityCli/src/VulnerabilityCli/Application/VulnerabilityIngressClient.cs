using System.Net;
using System.Text;
using System.Text.Json;
using VulnerabilityCli.Models;

namespace VulnerabilityCli.Application;

public class VulnerabilityIngressClient
{
    private readonly IHttpClientFactory _httpClientFactory;

    public VulnerabilityIngressClient(IHttpClientFactory httpClientFactory)
    {
        _httpClientFactory = httpClientFactory;
    }

    public async Task PostVulnerabilityDataAsync(VulnerabilityData vulnerabilityData, string baseUrl)
    {
        var httpClient = _httpClientFactory.CreateClient();
        var endpoint = $"{baseUrl}/vulnerability";

        try
        {
            var jsonContent = JsonSerializer.Serialize(vulnerabilityData);
            var content = new StringContent(jsonContent, Encoding.UTF8, "application/json");

            var response = await httpClient.PostAsync(endpoint, content);

            if (response.IsSuccessStatusCode)
            {
                Console.WriteLine($"Vulnerability data posted successfully to {endpoint}.");
            }
            else
            {
                Console.WriteLine($"Failed to post vulnerability data. Status code: {response.StatusCode}");

                throw response.StatusCode switch
                {
                    HttpStatusCode.BadRequest => new InvalidOperationException("Bad Request: The server could not understand the request."),
                    HttpStatusCode.NotFound => new HttpRequestException("Not Found: The endpoint does not exist."),
                    HttpStatusCode.InternalServerError => new InvalidOperationException("Internal Server Error: The server encountered an error."),
                    _ => new HttpRequestException($"Unexpected HTTP status code: {response.StatusCode}"),
                };
            }
        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"HTTP error occurred: {ex.Message}");
            throw;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An unexpected error occurred: {ex.Message}");
            throw;
        }
    }
}