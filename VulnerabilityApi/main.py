from typing import List, Optional

from fastapi import FastAPI, HTTPException, Query

from VulnerabilityApi.adapters.in_memory_repository import (
    InMemoryVulnerabilityRepository,
)
from VulnerabilityApi.application.vulnerability_service import VulnerabilityService
from VulnerabilityApi.models.models import Vulnerability

app = FastAPI()

repository = InMemoryVulnerabilityRepository()
service = VulnerabilityService(repository)


@app.get("/")
def read_root():
    return {"message": "Hello, World!"}


@app.post("/vulnerability", response_model=Vulnerability)
def create_vulnerability(vulnerability: Vulnerability):
    try:
        return service.create_vulnerability(vulnerability)
    except ValueError as e:
        raise HTTPException(status_code=400, detail=str(e))


@app.get("/all", response_model=List[Vulnerability])
def get_vulnerabilities(
    title: Optional[str] = None,
    min_criticality: Optional[int] = Query(None, ge=0, le=10),
    max_criticality: Optional[int] = Query(None, ge=0, le=10),
):
    try:
        return service.get_vulnerabilities(title, min_criticality, max_criticality)
    except ValueError as e:
        raise HTTPException(status_code=404, detail=str(e))
